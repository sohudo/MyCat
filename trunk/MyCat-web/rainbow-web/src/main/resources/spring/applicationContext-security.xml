<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<http pattern="/ui/**/**" security="none" />
	<http pattern="/login.jsp" security="none" />
	<http pattern="/getverifyimg" security="none" />
	<http pattern="/ws/**" security="none" />
	<http pattern="/Kaptcha.jpg" security="none" />

	<http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<logout logout-success-url="/index.jsp" />
		<!-- 实现免登陆验证 -->
		<remember-me />
		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<session-management
			session-authentication-strategy-ref="sas" invalid-session-url="/reload.jsp" />
		<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
		<!-- <custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR" 
			/> -->
	</http>




	<!-- 登录验证器 -->
	<beans:bean id="loginFilter"
		class="org.hx.rainbow.common.security.login.RainbowLoginAuthenticationFilter">
		<!-- 处理登录的action -->
		<beans:property name="sessionAuthenticationStrategy" ref="sas" />
		<beans:property name="filterProcessesUrl" value="/rainbowlogin"></beans:property>
		<!-- 验证成功后的处理 -->
		<beans:property name="authenticationSuccessHandler"
			ref="rainbowSuccessHandler"></beans:property>
		<!-- 验证失败后的处理 -->
		<beans:property name="authenticationFailureHandler"
			ref="rainbowFailureHandler"></beans:property>
		<beans:property name="dao" ref="daoMybatis"></beans:property>
		<beans:property name="authenticationManager" ref="rainbowAuthenticationManager"></beans:property>

	</beans:bean>
	<!-- <beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler"> 
		<beans:property name="defaultTargetUrl" value="/index.jsp"></beans:property> 
		</beans:bean> -->

	<!-- 防止用一用户并发登录 start -->
	<beans:bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="expiredUrl" value="/onlyLogin.jsp" />
	</beans:bean>	
	
	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="1" />
	</beans:bean>
	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
	<!--防止用一用户并发登录   end -->
	
	
	<beans:bean id="rainbowSuccessHandler"
		class="org.hx.rainbow.common.security.login.RainbowSuccessHandler">
	  <beans:property name="defaultTargetUrl" value="/index.jsp"></beans:property>
	</beans:bean>

	<beans:bean id="rainbowFailureHandler"
		class="org.hx.rainbow.common.security.login.RainbowFailureHandler">
		<!-- 可以配置相应的跳转方式。属性forwardToDestination为true采用forward false为sendRedirect -->
		<beans:property name="defaultFailureUrl" value="/login.jsp"></beans:property>
		<beans:property name="forwardToDestination" value="true"></beans:property>
	</beans:bean>

	<!-- 未登录的切入点 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.jsp"></beans:property>
	</beans:bean>

	<!-- 认证过滤器 -->
	<!-- <beans:bean id="securityFilter" class="org.hx.rainbow.common.security.login.RainbowSecurityFilter"> 
		用户拥有的权限 <beans:property name="authenticationManager" ref="rainbowAuthenticationManager" 
		/> 用户是否拥有所请求资源的权限 <beans:property name="accessDecisionManager" ref="rainbowAccessDecisionManager" 
		/> 资源与权限对应关系 <beans:property name="securityMetadataSource" ref="rainbowSecurityMetadataSource" 
		/> </beans:bean> -->

	<!-- 实现了UserDetailsService的Bean -->
	<authentication-manager alias="rainbowAuthenticationManager">
		<authentication-provider user-service-ref="rainbowUserDetailServiceImpl" />
	</authentication-manager>

	<beans:bean id="rainbowUserDetailServiceImpl"
		class="org.hx.rainbow.common.security.login.RainbowUserDetailServiceImpl">
		<beans:property name="dao" ref="daoMybatis"></beans:property>
	</beans:bean>

	<!-- <beans:bean id="rainbowAccessDecisionManager" class="org.hx.rainbow.common.security.login.RainbowAccessDecisionManager"/> 
		<beans:bean id="rainbowSecurityMetadataSource" class="org.hx.rainbow.common.security.login.RainbowSecurityMetadataSource"/> -->



</beans:beans>